{"version":3,"sources":["Question.js","Quiz.js","Intro.js","App.js","index.js"],"names":["Question","props","all_answers","length","splice","Math","floor","random","correct_answer","answers","map","answer","index","react_default","a","createElement","key","nanoid","type","value","name","question","id","questionNumber","for","className","showScore","he","decode","Quiz","_React$useState","React","useState","_React$useState2","Object","slicedToArray","setShowScore","_React$useState3","_React$useState4","chosenAnswers","setChosenAnswers","correctAnswers","i","push","questions","Question_Question","incorrect_answers","handleClick","_React$useState5","_React$useState6","score","setScore","_React$useState7","_React$useState8","amountOfAnswers","setAmountOfAnswers","e","document","querySelectorAll","onClick","Fragment","totalPoints","totalQuestions","restartQuiz","preventDefault","scoreToSave","apply","toConsumableArray","concat","querySelector","oldScore","console","log","saveData","localStorage","getItem","disabled","Intro","onChange","selectCategory","startQuiz","clearStats","App","quizIsOn","setQuizIsOn","setQuestions","category","setCategory","useEffect","fetch","then","res","json","data","results","notify","toast","icon","style","borderRadius","background","color","fontSize","Quiz_Quiz","window","location","reload","setItem","Intro_Intro","getElementById","clear","dist","position","ReactDOM","createRoot","render","App_App"],"mappings":"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","file":"static/js/main.5d1667e7.chunk.js","sourcesContent":["import './Question.css'\r\nimport he from 'he'\r\nimport { nanoid } from 'nanoid'\r\nimport React from 'react'\r\n\r\nexport default function Question(props) {\r\n    if (props.all_answers.length === 3) {\r\n        props.all_answers.splice((Math.floor(Math.random() * 3)), 0, props.correct_answer)\r\n    }\r\n    let answers = props.all_answers.map((answer, index) => <div key={nanoid}>\r\n        <input type=\"radio\" value={answer} name={props.question} id={\"\" + props.questionNumber + index} />\r\n        <label for={\"\" + props.questionNumber + index} className={(answer === props.correct_answer && props.showScore) ? \"red\" : ((props.showScore) ? 'results' : '')}>{he.decode(answer)}</label>\r\n    </div>)\r\n    return (\r\n        <fieldset className=\"question\" >\r\n            <legend className=\"question__text\" >{he.decode(props.question)}</legend>\r\n            {answers}\r\n        </fieldset>\r\n    )\r\n}","import Question from \"./Question\"\r\nimport React from \"react\"\r\nimport './Quiz.css'\r\nimport { nanoid } from \"nanoid\"\r\n\r\nexport default function Quiz(props) {\r\n    const [showScore, setShowScore] = React.useState(false)\r\n    const [chosenAnswers, setChosenAnswers] = React.useState(['', '', '', '', ''])\r\n    const correctAnswers = []\r\n\r\n    for (let i = 0; i < 5; i++) {\r\n        correctAnswers.push(props.questions[i].correct_answer)\r\n    }\r\n\r\n    const questions = props.questions.map((a, index) => <Question question={a.question} correct_answer={a.correct_answer} all_answers={a.incorrect_answers} questionNumber={index} handleClick={handleClick} chosenAnswers={chosenAnswers} showScore={showScore} key={nanoid} />)\r\n\r\n    const [score, setScore] = React.useState(0)\r\n\r\n    function submitAnswers(e) {\r\n        e.preventDefault()\r\n        let scoreToSave = 0\r\n        for (let i = 0; i < 5; i++) {\r\n            setChosenAnswers(...chosenAnswers, chosenAnswers[i] = document.querySelector('input[name=\"' + props.questions[i].question + '\"]:checked').id)\r\n            if (document.querySelector('input[name=\"' + props.questions[i].question + '\"]:checked').value === correctAnswers[i]) {\r\n                setScore(oldScore => oldScore + 1)\r\n                scoreToSave++\r\n            }\r\n        }\r\n        setShowScore(true)\r\n        console.log(scoreToSave)\r\n        props.saveData(scoreToSave)\r\n        console.log(props.totalQuestions, props.totalPoints, localStorage.getItem('totalQuestions'), localStorage.getItem('totalPoints'))\r\n    }\r\n\r\n    const [amountOfAnswers, setAmountOfAnswers] = React.useState(0)\r\n    function handleClick(e) {\r\n        setAmountOfAnswers(document.querySelectorAll('input[type=radio]:checked').length)\r\n    }\r\n\r\n    return (\r\n        <form className=\"quiz__page\" onClick={() => handleClick()}>\r\n            {questions}\r\n            {!showScore ? <button onClick={submitAnswers} disabled={amountOfAnswers !== 5} className=\"quiz__submit\">Check answers</button> :\r\n                (<><p className=\"quiz__result\">Your score: {score} out of 5<br />Total: {props.totalPoints + score} out of {props.totalQuestions}</p>\r\n                    <button onClick={props.restartQuiz} className=\"quiz__reload\">Play again</button></>)}\r\n\r\n        </form>\r\n\r\n    )\r\n}","import './Intro.css'\r\nimport React from 'react'\r\n\r\nexport default function Intro(props) {\r\n    return (\r\n        <section className='intro'>\r\n            <h1 className='intro__heading'>Quizzical</h1>\r\n            <p className='intro__description'>This is my solo project inspired by the Scrimba React course</p>\r\n            <p className='select_category__label'>choose category</p>\r\n            <select id=\"select_category\" onChange={props.selectCategory}>\r\n                <option value=\"\">Any Category</option>\r\n                <option value=\"9\">General Knowledge</option>\r\n                <option value=\"10\">Books</option>\r\n                <option value=\"11\">Film</option>\r\n                <option value=\"12\">Music</option>\r\n                <option value=\"13\">Musicals &amp; Theatres</option>\r\n                <option value=\"14\">Television</option>\r\n                <option value=\"15\">Video Games</option>\r\n                <option value=\"16\">Board Games</option>\r\n                <option value=\"17\">Science &amp; Nature</option>\r\n                <option value=\"18\">Computers</option>\r\n                <option value=\"19\">Mathematics</option>\r\n                <option value=\"20\">Mythology</option>\r\n                <option value=\"21\">Sports</option>\r\n                <option value=\"22\">Geography</option>\r\n                <option value=\"23\">History</option>\r\n                <option value=\"24\">Politics</option>\r\n                <option value=\"25\">Art</option>\r\n                <option value=\"26\">Celebrities</option>\r\n                <option value=\"27\">Animals</option>\r\n                <option value=\"28\">Vehicles</option>\r\n                <option value=\"29\">Comics</option>\r\n                <option value=\"30\">Gadgets</option>\r\n                <option value=\"31\">Japanese Anime &amp; Manga</option>\r\n                <option value=\"32\">Cartoon &amp; Animations</option>\r\n            </select>\r\n            <button onClick={props.startQuiz} className='start__quiz'>Start Quiz</button>\r\n            <button onClick={props.clearStats} className=\"quiz__clear_stats\">Erase Statistics</button>\r\n        </section>\r\n    )\r\n}","import './App.css';\nimport React from 'react';\nimport Quiz from './Quiz';\nimport Intro from './Intro';\nimport toast, { Toaster } from 'react-hot-toast';\n\nexport default function App() {\n  let totalQuestions = 0;\n  let totalPoints = 0;\n  totalQuestions = +(localStorage.getItem('totalQuestions') || 0) + 5\n  totalPoints = +(localStorage.getItem('totalPoints'))\n\n  const [quizIsOn, setQuizIsOn] = React.useState(false)\n\n  function startQuiz() {\n    setQuizIsOn(true)\n  }\n\n  const [questions, setQuestions] = React.useState(null)\n  const [category, setCategory] = React.useState(\"\")\n\n\n  React.useEffect(function () {\n    fetch(\"https://opentdb.com/api.php?amount=5&type=multiple&category=\" + category)\n      .then(res => res.json())\n      .then(data => setQuestions(data.results))\n  }, [category])\n\n  function saveData(score) {\n    localStorage.setItem('totalPoints', (totalPoints + score))\n    localStorage.setItem('totalQuestions', totalQuestions)\n  }\n\n  const notify = () => toast('Stats cleared', {\n    icon: '✅',\n    style: {\n      borderRadius: '10px',\n      background: 'transparent',\n      color: '#fff',\n      fontSize: '20px',\n    }\n  });\n\n  function clearStats(e) {\n    e.preventDefault()\n    localStorage.clear()\n    notify()\n  }\n\n  function restartQuiz(e) {\n    e.preventDefault()\n    window.location.reload()\n  }\n\n  function selectCategory() {\n    setCategory(document.getElementById(\"select_category\").value)\n  }\n\n  return (\n    <main className=\"App\">\n      {quizIsOn ? <Quiz questions={questions} restartQuiz={restartQuiz} saveData={saveData} totalPoints={totalPoints} totalQuestions={totalQuestions} /> : <Intro startQuiz={startQuiz} selectCategory={selectCategory} clearStats={clearStats} />}\n      <Toaster position=\"top-center\" />\n    </main>\n  );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <App />\n);\n\n"],"sourceRoot":""}